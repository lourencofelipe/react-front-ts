import type { NextPage } from 'next'

import { useState } from 'react'

import Head from 'next/head'

import Image from 'next/image'

import banner from '@Images/banner.jpg'

import logo from '@Images/logo.svg'

import tile1 from '@Images/tile-1.jpg'

import styled from 'styled-components'

import { Main, TopBanner, NavBar, PageButton, BottomBanner, Title, Input, Button } from '@Components'

const LogoPosition = styled.div`
  width: 100%;
  padding-left: 18px;

  display: flex;
  justify-content: start;


  /* Smartphone - landscape */ 
  @media screen and (max-width: 480px) {
    padding-left: 0px;
    padding-top: 10px;
    padding-bottom: 10px;
    
    background-color: black;
    justify-content: center;
  }

  /* Tablet - portrait */ 
  @media screen and (min-width: 480px) and (max-width: 768px) {
    width: 50%;
  }

  /* Tablet - landscape */ 
  @media screen and (min-width: 768px) and (max-width: 960px) {
    width: 50%;
  }

`

const PageButtonPosition = styled.div`
  width: 50%;

  display: flex;
  justify-content: space-around;

  @media screen and (max-width: 480px) {
    width: 100%;
    padding-top: 25px;
    padding-bottom: 25px;
  }
`

const ImageTopPosition = styled.div`
  position: absolute;
  width: 100vw;
  height: 90vh;
  overflow: hidden;
  z-index: -1;

`

const ImageBottomPosition = styled.div`
  padding-right: 20px;

  display: flex;
  justify-content: center;

  @media screen and (max-width: 480px) {
    padding: 35px 20px 0px 20px;
  }
`

const TasksPosition = styled.div`
  width: 50%; 
  height: 68%;
  padding-left: 20px;

  display: flex;
  flex-direction: column;

  @media screen and (max-width: 480px) {
    width: 100%;
    padding: 0px;

  }

`

const InputPosition = styled.div`
  background-color: #ededed;
  width: 50%;
  border-radius: 4px;
  border: none;
  padding: 19px 16px 19px 16px;

  display: flex;
  justify-content: space-between;

  @media screen and (max-width: 480px) {
    width: 81%;
    margin-left: 20px;
  }

`

const ButtonTaskStyled = styled(Button)`
  padding: 9px 20px;
  background-color: #48a8c0;
  border-radius: 4px;
  font-family: roboto;
  font-weight: 400;
  font-size: 21px;
  color: #ffffff;
  border: none;
  cursor: pointer;
`

const Home: NextPage = () => {
  const [tasks, setTask] = useState<string[]>([]);
  const [inputValue, setInputValue] = useState<string>('');

  const handleOnChange = (e: any) => setInputValue(e.target.value);
  const addTask = () => {
    setTask([...tasks, inputValue]);
    setInputValue('');
  }
  const removeTask = (e: any) => {
    const newTasks = tasks.filter(x => x !== e.target.getAttribute('data-task'))
    setTask(newTasks)
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
        <TopBanner>
          <ImageTopPosition>
            <Image src={banner} layout="fill" objectFit="cover" quality={100} alt="Banner" />
          </ImageTopPosition>
          <NavBar>
            <LogoPosition>
              <Image src={logo} quality={100} alt="Logo" />
            </LogoPosition>
            <PageButtonPosition>
              <PageButton href="https://google.com">PAGE ONE</PageButton>
              <PageButton href="https://google.com">PAGE TWO</PageButton>
              <PageButton href="https://google.com">PAGE THREE</PageButton>
            </PageButtonPosition>
          </NavBar>
          
        </TopBanner>

        <BottomBanner>
          <ImageBottomPosition>
            <Image src={tile1} quality={100} alt="Category"/>
          </ImageBottomPosition>

          <TasksPosition>
            <Title>My Tasks</Title>
            <div>
                {tasks.map((task, i) => ( 
                  <div key={task + i} style={{ display: 'flex' }}>
                    <h2>{ task }</h2>
                    <ButtonTaskStyled type="button" data-task={task} onClick={removeTask}>Remove</ButtonTaskStyled>
                  </div>
                  )
                )}
              </div>
            <InputPosition>
              <Input placeholder="Add a task" value={inputValue} onChange={handleOnChange}></Input>
              <ButtonTaskStyled type="button" onClick={addTask}>Add</ButtonTaskStyled>
            </InputPosition>
          </TasksPosition>
        
        </BottomBanner>
      </Main>
    </>
  )
}

export default Home
